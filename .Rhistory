summary(sc_lm)[["adj.r.squared"]]
sc_lm_sw_back <- regsubsets(LeagueIndex~., sc, nvmax = 5,
method = "exhaust",force.in = NULL,force.out = NULL)
sc_lm_sw_back_summary<-summary(sc_lm_sw_back)
#using the lm provivded
sc_lm_r1<-lm(LeagueIndex~ActionLatency+AssignToHotkeys+APM+MinimapAttacks,sc)
summary(sc_lm_r1,cor=T)
#Normality
qqnorm(residuals(sc_lm_r1))
shapiro.test(residuals(sc_lm_r1))
sc_lm_sw_back<-regsubsets(LeagueIndex~., sc, nvmax = 5,
method = "exhaust",force.in = NULL,force.out = NULL)
sc_lm_sw_back_summary<-summary(sc_lm_sw_back)
#using the lm provivded
sc_lm_r1<-lm(LeagueIndex~ActionLatency+AssignToHotkeys+APM+MinimapAttacks,sc)
summary(sc_lm_r1,cor=T)
#Normality
qqnorm(residuals(sc_lm_r1))
shapiro.test(residuals(sc_lm_r1))
install.packages("GGally")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(dbplyr) #piping
library(ggplot2) #plotting
library(Hmisc) # for correlation matrix
library(corrplot) # For correlation matrix graphic
#library(ggthemes) #for ggplot Themes
#library(SC2API) #starcraft 2 API
#library(broom) #grabbing p-value
#library(GGally)  ggpairs
#set_token("33be678eb46d4f51ac36f72218abcdd2", #"Sb3QWR8A9mN9s0XgAt5w4j0FttY84pkg")
# Assignment Midterm 2
#https://cgrudz.github.io/teaching/stat_757_2020_fall/assets/midterm_2.html
sc<-read_csv("~/STAT757/skillcraft/SkillCraft1_Dataset.csv")
colnames(sc)
#set type
sc$HoursPerWeek<-as.numeric(sc$HoursPerWeek)
sc$TotalHours<-as.numeric(sc$TotalHours)
count_missing_age<-count(sc%>%
filter(is.na(Age))%>%arrange(LeagueIndex))
count_professional<-count(sc%>%filter(LeagueIndex==8))
count_grandmaster<-count(sc%>%filter(LeagueIndex==8))
print(paste('There are ',count_missing_age,' missing values in the age column. There are ',count_professional,' professional #players.'))
sc_describe<-describe(sc)
print('Age Values')
sc_describe[["Age"]][["counts"]][2]
print('LeagueIndex Values')
sc_describe[["LeagueIndex"]][["counts"]][2]
print('Hours Per Week Lower Extreme Values')
sc_describe[["HoursPerWeek"]][["extremes"]][0]
describe(sc$TotalHours)
sc<-filter(sc,sc$TotalHours<1000000)
sc<-sc%>%
drop_na()%>%
filter(HoursPerWeek!=0)
sc_describe<-describe(sc)
sc<-sc%>%
mutate(NumberOfPACs=NumberOfPACs*88.5,
MinimapAttacks=MinimapAttacks*88.5,
MinimapRightClicks=MinimapRightClicks*88.5,
SelectByHotkeys=SelectByHotkeys*88.5,
AssignToHotkeys=AssignToHotkeys*88.5,
UniqueHotkeys=UniqueHotkeys*88.5,
WorkersMade=WorkersMade*88.5,
UniqueUnitsMade=UniqueUnitsMade*88.5,
ComplexUnitsMade=ComplexUnitsMade*88.5,
ComplexAbilitiesUsed=ComplexAbilitiesUsed*88.5,
GapBetweenPACs=GapBetweenPACs*1000,
ActionLatency=ActionLatency*1000)
colnames(sc)
#sc$LeagueIndex <- as.factor(sc$LeagueIndex)
#ggplot(sc, aes(x=LeagueIndex, y=ActionsInPAC)) +
#  geom_boxplot()
#lm(LeagueIndex~APM,sc)
summary(sc)
sc_cor<-cor(select_if(sc,is.numeric),use = "complete.obs")
sc_cor_plot<-corrplot(sc_cor,
tl.cex=.75,
tl.col='black')
LeagueIndex_Normal<-shapiro.test(sc$LeagueIndex)
ggplot(sc, aes(LeagueIndex)) +
geom_histogram(bins=7)+
ggtitle(
'LeagueIndex Distribution',subtitle = paste(LeagueIndex_Normal[3],
" P-Value: ",LeagueIndex_Normal[2]))+
xlab("League Index (Bronze(1) to Grand Master(7)")+
ylab("Count")
ggplot(sc, aes(LeagueIndex)) +
geom_density()+
ggtitle(
'LeagueIndex Distribution',subtitle = paste(LeagueIndex_Normal[3],
" P-Value: ",LeagueIndex_Normal[2]))+
xlab("League Index (Bronze(1) to Grand Master(7)")+
ylab("Count")
#+theme_wsj(base_size = 7.5,color = "white")
qqnorm(scale(sc$LeagueIndex))
HoursPerWeek_Normal<-shapiro.test(sc$HoursPerWeek)
ggplot(sc, aes(scale(log(HoursPerWeek)))) +
geom_density()+
ggtitle(
'Hour per week distribution',subtitle = paste(HoursPerWeek_Normal[3],
" P-Value: ",HoursPerWeek_Normal[2]))+
xlab("Hours Per Week")+
ylab("Count")
qqnorm(scale(sc$HoursPerWeek))
qqnorm(scale(sc$APM))
## Stepwise Linear Regression:
#The function summary() reports the best set of variables for each model size. From the output above, an asterisk #specifies that a given variable is included in the corresponding model @Stepwise.
#library(caret) #for easy machine learning workflow
#library(leaps) #for computing stepwise regression
#sc_lm_sw_back<-regsubsets(LeagueIndex~., sc, nvmax = 5,
#                     method = "exhaust",force.in = NULL,force.out = NULL)
#sc_lm_sw_back_summary<-summary(sc_lm_sw_back)
#using the lm provivded
#sc_lm_r1<-lm(LeagueIndex~ActionLatency+AssignToHotkeys+APM+MinimapAttacks,sc)
#summary(sc_lm_r1,cor=T)
#Normality
#qqnorm(residuals(sc_lm_r1))
#shapiro.test(residuals(sc_lm_r1))
sc_lm<-lm(LeagueIndex~.-GameID,sc)
sc_lm_1<-update(sc_lm,.~.-ComplexAbilitiesUsed)
sc_lm_2<-update(sc_lm,.~.-ComplexAbilitiesUsed-MinimapRightClicks)
sc_lm_3<-update(sc_lm,.~.-ComplexAbilitiesUsed-MinimapRightClicks-APM)
sc_lm_4<-update(sc_lm,.~.-ComplexAbilitiesUsed-MinimapRightClicks-APM-UniqueUnitsMade)
#anova(sc_lm_1)$'Pr(>F)'
summary(sc_lm)
summary(sc_lm_4)
plot(sc_lm)
plot(sc_lm_4)
confint(sc_lm_4)
anova(sc_lm,sc_lm_1,sc_lm_2,sc_lm_3,sc_lm_4)
anova(sc_lm,sc_lm_4)
summary(sc_lm_4,cor='T')
plot(sc_lm_4)
lm_APM<-lm(APM~LeagueIndex*(.-LeagueIndex-GameID),sc)
summary(lm_APM)
qqnorm(residuals(lm_APM))
qqline(residuals(lm_APM))
shapiro.test(residuals(lm_APM))
data <-get_league_data(season_id = 43,
queue_id = 201,
team_type = 0,
league_id = 3,
host_region = "eu")
knitr::opts_chunk$set(echo = TRUE)
colnames(sc)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(dbplyr) #piping
library(ggplot2) #plotting
library(Hmisc) # for correlation matrix
library(corrplot) # For correlation matrix graphic
#library(ggthemes) #for ggplot Themes
#library(SC2API) #starcraft 2 API
#library(broom) #grabbing p-value
#library(GGally)  ggpairs
#set_token("33be678eb46d4f51ac36f72218abcdd2", #"Sb3QWR8A9mN9s0XgAt5w4j0FttY84pkg")
# Assignment Midterm 2
#https://cgrudz.github.io/teaching/stat_757_2020_fall/assets/midterm_2.html
sc<-read_csv("~/STAT757/skillcraft/SkillCraft1_Dataset.csv")
colnames(sc)
#set type
sc$HoursPerWeek<-as.numeric(sc$HoursPerWeek)
sc$TotalHours<-as.numeric(sc$TotalHours)
count_missing_age<-count(sc%>%
filter(is.na(Age))%>%arrange(LeagueIndex))
count_professional<-count(sc%>%filter(LeagueIndex==8))
count_grandmaster<-count(sc%>%filter(LeagueIndex==8))
print(paste('There are ',count_missing_age,' missing values in the age column. There are ',count_professional,' professional #players.'))
sc_describe<-describe(sc)
print('Age Values')
sc_describe[["Age"]][["counts"]][2]
print('LeagueIndex Values')
sc_describe[["LeagueIndex"]][["counts"]][2]
print('Hours Per Week Lower Extreme Values')
sc_describe[["HoursPerWeek"]][["extremes"]][0]
describe(sc$TotalHours)
sc<-filter(sc,sc$TotalHours<1000000)
summary(sc_lm)
sc_lm<-lm(LeagueIndex~.,sc)
sc_lm_1<-update(sc_lm,.~.-ComplexAbilitesUsed ,sc)
sc_lm_2<-update(sc_lm,.~.-Age-UniqueUnitsMade)
sc_lm_3<-update(sc_lm,.~.-Age-UniqueUnitsMade-ComplexUnitsMade)
sc_lm_4<-update(sc_lm,.~.-Age-UniqueUnitsMade-ComplexUnitsMade-MinimapRightClicks)
sc_lm_final<-update(sc_lm,.~.-Age-TotalMapExplored-UniqueUnitsMade-MinimapRightClicks-ComplexUnitsMade)
summary(sc_lm_1)
#anova(sc_lm_1)$'Pr(>F)'
sc_lm<-lm(LeagueIndex~.,sc)
sc_lm_1<-update(sc_lm,.~.-ComplexAbilitesUsed ,sc)
sc_lm_2<-update(sc_lm,.~.-Age-UniqueUnitsMade)
sc_lm_3<-update(sc_lm,.~.-Age-UniqueUnitsMade-ComplexUnitsMade)
sc_lm_4<-update(sc_lm,.~.-Age-UniqueUnitsMade-ComplexUnitsMade-MinimapRightClicks)
sc_lm_final<-update(sc_lm,.~.-Age-TotalMapExplored-UniqueUnitsMade-MinimapRightClicks-ComplexUnitsMade)
summary(sc_lm_1)
#anova(sc_lm_1)$'Pr(>F)'
sc_lm<-lm(LeagueIndex~.,sc)
sc_lm_1<-update(sc_lm,.~.-ComplexAbilitiesUsed ,sc)
sc_lm_2<-update(sc_lm,.~.-Age-UniqueUnitsMade)
sc_lm_3<-update(sc_lm,.~.-Age-UniqueUnitsMade-ComplexUnitsMade)
sc_lm_4<-update(sc_lm,.~.-Age-UniqueUnitsMade-ComplexUnitsMade-MinimapRightClicks)
sc_lm_final<-update(sc_lm,.~.-Age-TotalMapExplored-UniqueUnitsMade-MinimapRightClicks-ComplexUnitsMade)
summary(sc_lm_1)
#anova(sc_lm_1)$'Pr(>F)'
sc_lm<-lm(LeagueIndex~.,sc)
sc_lm_1<-update(sc_lm,.~.-ComplexAbilitiesUsed ,sc)
sc_lm_2<-update(sc_lm,.~.-ComplexAbilitiesUsed-MinimapRightClicks,sc)
sc_lm_2<-update(sc_lm,.~.-Age-UniqueUnitsMade)
sc_lm_3<-update(sc_lm,.~.-Age-UniqueUnitsMade-ComplexUnitsMade)
sc_lm_4<-update(sc_lm,.~.-Age-UniqueUnitsMade-ComplexUnitsMade-MinimapRightClicks)
sc_lm_final<-update(sc_lm,.~.-Age-TotalMapExplored-UniqueUnitsMade-MinimapRightClicks-ComplexUnitsMade)
summary(sc_lm_2)
#anova(sc_lm_1)$'Pr(>F)'
sc_lm<-lm(LeagueIndex~.,sc)
sc_lm_1<-update(sc_lm,.~.-ComplexAbilitiesUsed ,sc)
sc_lm_2<-update(sc_lm,.~.-ComplexAbilitiesUsed-MinimapRightClicks,sc)
sc_lm_2<-update(sc_lm,.~.-Age-UniqueUnitsMade)
sc_lm_3<-update(sc_lm,.~.-Age-UniqueUnitsMade-ComplexUnitsMade)
sc_lm_4<-update(sc_lm,.~.-Age-UniqueUnitsMade-ComplexUnitsMade-MinimapRightClicks)
sc_lm_final<-update(sc_lm,.~.-Age-TotalMapExplored-UniqueUnitsMade-MinimapRightClicks-ComplexUnitsMade)
summary(sc_lm_2)
#anova(sc_lm_1)$'Pr(>F)'
sc_lm<-lm(LeagueIndex~.,sc)
sc_lm_1<-update(sc_lm,.~.-ComplexAbilitiesUsed ,sc)
sc_lm_2<-update(sc_lm,.~.-ComplexAbilitiesUsed-MinimapRightClicks,sc)
sc_lm_3<-update(sc_lm,.~.-Age-UniqueUnitsMade-ComplexUnitsMade)
sc_lm_4<-update(sc_lm,.~.-Age-UniqueUnitsMade-ComplexUnitsMade-MinimapRightClicks)
sc_lm_final<-update(sc_lm,.~.-Age-TotalMapExplored-UniqueUnitsMade-MinimapRightClicks-ComplexUnitsMade)
summary(sc_lm_2)
#anova(sc_lm_1)$'Pr(>F)'
# Chunk 2: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 3: loading_packages
library(tidyverse)
library(dbplyr) #piping
library(ggplot2) #plotting
library(gridExtra)# easy plot grids
library(Hmisc) # for correlation matrix
library(corrplot) # For correlation matrix graphic
#library(SC2API) #starcraft 2 API
library(broom) #tidy lm summaries
library(knitr) #pretty tables
#library(GGally)  ggpairs
#library(knitr)#Side by side table
#library(kableExtra)#Side by side table
# Chunk 4: settoken
#set_token("33be678eb46d4f51ac36f72218abcdd2", #"Sb3QWR8A9mN9s0XgAt5w4j0FttY84pkg")
# Chunk 5: midterm2
# Assignment Midterm 2
#https://cgrudz.github.io/teaching/stat_757_2020_fall/assets/midterm_2.html
# Chunk 6: loaddata
sc<-read_csv("~/STAT757/skillcraft/SkillCraft1_Dataset.csv")
# Chunk 7
colnames(sc)
# Chunk 8: colorvector
cbPalette <- c("#CC6600", "#999999", "#FFCC00", "#CCCFFF", "#CCFFFF","#0072B2", "#FF6600")
# Chunk 9
#set type
sc$HoursPerWeek<-as.numeric(sc$HoursPerWeek)
sc$TotalHours<-as.numeric(sc$TotalHours)
count_missing_age<-count(sc%>%
filter(is.na(Age))%>%arrange(LeagueIndex))
count_professional<-count(sc%>%filter(LeagueIndex==8))
count_grandmaster<-count(sc%>%filter(LeagueIndex==8))
print(paste('There are ',count_missing_age,' missing values in the age column. There are ',count_professional,' professional #players.'))
# Chunk 10
sc<-filter(sc,sc$TotalHours<1000000)
# Chunk 11: finalclean
sc<-sc%>%
drop_na()%>%
filter(HoursPerWeek!=0)
sc_describe<-describe(sc)
# Chunk 12: changeunits
sc<-sc%>%
mutate(NumberOfPACs=NumberOfPACs*88.5,
MinimapAttacks=MinimapAttacks*88.5,
MinimapRightClicks=MinimapRightClicks*88.5,
SelectByHotkeys=SelectByHotkeys*88.5,
AssignToHotkeys=AssignToHotkeys*88.5,
UniqueHotkeys=UniqueHotkeys*88.5,
WorkersMade=WorkersMade*88.5,
UniqueUnitsMade=UniqueUnitsMade*88.5,
ComplexUnitsMade=ComplexUnitsMade*88.5,
ComplexAbilitiesUsed=ComplexAbilitiesUsed*88.5,
GapBetweenPACs=GapBetweenPACs*1000,
ActionLatency=ActionLatency*1000)
# Chunk 13: statsatlevels
#sc$LeagueIndex <- as.factor(sc$LeagueIndex)
#ggplot(sc, aes(x=LeagueIndex, y=ActionsInPAC)) +
#  geom_boxplot()
#lm(LeagueIndex~APM,sc)
# Chunk 14
#summary(sc)
# Chunk 15
LeagueIndex_Normal<-shapiro.test(sc$LeagueIndex)
ggplot(sc)+
geom_histogram(aes(x=LeagueIndex,y=(..count..)/sum(..count..),fill=LeagueIndex),
position = "identity", binwidth = 1,fill=cbPalette) +
ylab("Relative Frequency")+
ggtitle('LeagueIndex Distribution',subtitle = paste(LeagueIndex_Normal[3],
" P-Value: ",LeagueIndex_Normal[2]))+xlab("LeagueIndex 1-Bronze to 7-Grandmaster")
# Chunk 16
sc_cor<-cor(select_if(sc,is.numeric),use = "complete.obs")
sc_cor_plot<-corrplot(sc_cor,
tl.cex=.75,
tl.col='black')
# Chunk 17: droppredictorsandredocor
sc<-sc%>%select(!c(GameID,ActionLatency,GapBetweenPACs,NumberOfPACs,SelectByHotkeys,ActionsInPAC))
# Chunk 18
cor_hoursperweek<-paste(
round(cor(sc%>%filter(between(LeagueIndex,1,4))%>%select(LeagueIndex),
sc%>%filter(between(LeagueIndex,1,4))%>%select(HoursPerWeek))[1],
2),
"vs",
round(cor(sc%>%filter(between(LeagueIndex,4,7))%>%select(LeagueIndex),
sc%>%filter(between(LeagueIndex,4,7))%>%select(HoursPerWeek))[1],
2)
)
# Chunk 19: transform
#sc[,c("MinimapAttacks", "HoursPerWeek","TotalHours","MinimapRightClicks"
#      ,"ComplexUnitsMade","ComplexAbilitiesUsed")]<-sqrt(sc[,c("MinimapAttacks", "HoursPerWeek","TotalHours","MinimapRightClicks"
#      ,"ComplexUnitsMade","ComplexAbilitiesUsed")])
# Chunk 20
VioLeagueIndex<-function(predictor){
ggplot(sc, aes(x=factor(LeagueIndex), y=unlist(sc%>%select(all_of(predictor))), fill=factor(LeagueIndex))) +
geom_violin(trim=FALSE, color="black")+scale_fill_manual(values=cbPalette)+
stat_summary(fun.data=mean_sdl,geom="pointrange", color="black")+ coord_flip()+
ggtitle(paste("LeagueIndex by",predictor))+
xlab("LeagueIndex")+ylab(predictor) + guides(fill= FALSE)
}
plots<-lapply(colnames(sc)[2:length(colnames(sc))],VioLeagueIndex)
do.call("grid.arrange", c(plots[1:4], ncol=2))
do.call("grid.arrange", c(plots[5:8], ncol=2))
do.call("grid.arrange", c(plots[9:13], ncol=2))
# Chunk 21: exhaustivestepwise
## Stepwise Linear Regression:
#The function summary() reports the best set of variables for each model size. From the output above, an asterisk #specifies that a given variable is included in the corresponding model @Stepwise.
#library(caret) #for easy machine learning workflow
#library(leaps) #for computing stepwise regression
#sc_lm_sw_back<-regsubsets(LeagueIndex~., sc, nvmax = 5,
#                     method = "exhaust",force.in = NULL,force.out = NULL)
#sc_lm_sw_back_summary<-summary(sc_lm_sw_back)
#using the lm provivded
#sc_lm_r1<-lm(LeagueIndex~ActionLatency+AssignToHotkeys+APM+MinimapAttacks,sc)
#summary(sc_lm_r1,cor=T)
#Normality
#qqnorm(residuals(sc_lm_r1))
#shapiro.test(residuals(sc_lm_r1))
# Chunk 22: modeltrimming
sc_lm<-lm(LeagueIndex~.,sc)
sc_lm_1<-update(sc_lm,.~.-UniqueUnitsMade ,sc)
sc_lm_2<-update(sc_lm,.~.-Age-UniqueUnitsMade)
sc_lm_3<-update(sc_lm,.~.-Age-UniqueUnitsMade-ComplexUnitsMade)
sc_lm_4<-update(sc_lm,.~.-Age-UniqueUnitsMade-ComplexUnitsMade-MinimapRightClicks)
sc_lm_final<-update(sc_lm,.~.-Age-TotalMapExplored-UniqueUnitsMade-MinimapRightClicks-ComplexUnitsMade)
#anova(sc_lm_1)$'Pr(>F)'
sc_lm<-lm(LeagueIndex~.,sc)
sc_lm_1<-update(sc_lm,.~.-ComplexAbilitiesUsed ,sc)
sc_lm_2<-update(sc_lm,.~.-ComplexAbilitiesUsed-MinimapRightClicks,sc)
sc_lm_3<-update(sc_lm,.~.-Age-UniqueUnitsMade-ComplexUnitsMade)
sc_lm_4<-update(sc_lm,.~.-Age-UniqueUnitsMade-ComplexUnitsMade-MinimapRightClicks)
sc_lm_final<-update(sc_lm,.~.-Age-TotalMapExplored-UniqueUnitsMade-MinimapRightClicks-ComplexUnitsMade)
summary(sc_lm_2)
#anova(sc_lm_1)$'Pr(>F)'
sc_lm<-lm(LeagueIndex~.,sc)
sc_lm_1<-update(sc_lm,.~.-ComplexAbilitiesUsed ,sc)
sc_lm_2<-update(sc_lm,.~.-ComplexAbilitiesUsed-MinimapRightClicks,sc)
sc_lm_3<-update(sc_lm,.~.-Age-UniqueUnitsMade-ComplexUnitsMade)
sc_lm_4<-update(sc_lm,.~.-Age-UniqueUnitsMade-ComplexUnitsMade-MinimapRightClicks)
sc_lm_final<-update(sc_lm,.~.-Age-TotalMapExplored-UniqueUnitsMade-MinimapRightClicks-ComplexUnitsMade)
summary(sc_lm)
#anova(sc_lm_1)$'Pr(>F)'
sc_lm<-lm(LeagueIndex~.,sc)
sc_lm_1<-update(sc_lm,.~.-UniqueUnitsMade  ,sc)
sc_lm_2<-update(sc_lm,.~.-UniqueUnitsMade  ,sc)
sc_lm_final<-update(sc_lm,.~.-Age-TotalMapExplored-UniqueUnitsMade-MinimapRightClicks-ComplexUnitsMade)
summary(sc_lm_1)
#anova(sc_lm_1)$'Pr(>F)'
sc_lm<-lm(LeagueIndex~.,sc)
sc_lm_1<-update(sc_lm,.~.-UniqueUnitsMade  ,sc)
sc_lm_2<-update(sc_lm,.~.-UniqueUnitsMade-Age ,sc)
sc_lm_final<-update(sc_lm,.~.-Age-TotalMapExplored-UniqueUnitsMade-MinimapRightClicks-ComplexUnitsMade)
summary(sc_lm_2)
#anova(sc_lm_1)$'Pr(>F)'
sc_lm<-lm(LeagueIndex~.,sc)
sc_lm_1<-update(sc_lm,.~.-UniqueUnitsMade  ,sc)
sc_lm_2<-update(sc_lm,.~.-UniqueUnitsMade-Age ,sc)
sc_lm_3<-update(sc_lm,.~.-UniqueUnitsMade-Age-ComplexUnitsMade ,sc)
sc_lm_final<-update(sc_lm,.~.-Age-TotalMapExplored-UniqueUnitsMade-MinimapRightClicks-ComplexUnitsMade)
summary(sc_lm_3)
#anova(sc_lm_1)$'Pr(>F)'
sc_lm<-lm(LeagueIndex~.,sc)
sc_lm_1<-update(sc_lm,.~.-UniqueUnitsMade  ,sc)
sc_lm_2<-update(sc_lm,.~.-UniqueUnitsMade-Age ,sc)
sc_lm_3<-update(sc_lm,.~.-UniqueUnitsMade-Age-ComplexUnitsMade ,sc)
sc_lm_4<-update(sc_lm,.~.-UniqueUnitsMade-Age-ComplexUnitsMade-MinimapRightClicks,sc)
sc_lm_final<-update(sc_lm,.~.-Age-TotalMapExplored-UniqueUnitsMade-MinimapRightClicks-ComplexUnitsMade)
summary(sc_lm_4)
#anova(sc_lm_1)$'Pr(>F)'
sc_lm<-lm(LeagueIndex~.,sc)
sc_lm_1<-update(sc_lm,.~.-UniqueUnitsMade ,sc)
sc_lm_2<-update(sc_lm,.~.-Age-UniqueUnitsMade)
sc_lm_3<-update(sc_lm,.~.-Age-UniqueUnitsMade-ComplexUnitsMade)
sc_lm_4<-update(sc_lm,.~.-Age-UniqueUnitsMade-ComplexUnitsMade-MinimapRightClicks)
sc_lm_final<-update(sc_lm,.~.-Age-TotalMapExplored-UniqueUnitsMade-MinimapRightClicks-ComplexUnitsMade)
sc_lm<-lm(LeagueIndex~.,sc)
sc_lm_1<-update(sc_lm,.~.-UniqueUnitsMade  ,sc)
sc_lm_2<-update(sc_lm,.~.-UniqueUnitsMade-Age ,sc)
sc_lm_3<-update(sc_lm,.~.-UniqueUnitsMade-Age-ComplexUnitsMade ,sc)
sc_lm_final<-update(sc_lm,.~.-UniqueUnitsMade-Age-ComplexUnitsMade-MinimapRightClicks,sc)
summary(sc_lm_4)
#anova(sc_lm_1)$'Pr(>F)'
sc_lm<-lm(LeagueIndex~.,sc)
sc_lm_1<-update(sc_lm,.~.-UniqueUnitsMade  ,sc)
sc_lm_2<-update(sc_lm,.~.-UniqueUnitsMade-Age ,sc)
sc_lm_3<-update(sc_lm,.~.-UniqueUnitsMade-Age-ComplexUnitsMade ,sc)
sc_lm_final<-update(sc_lm,.~.-UniqueUnitsMade-Age-ComplexUnitsMade-MinimapRightClicks,sc)
summary(sc_lm_final)
#anova(sc_lm_1)$'Pr(>F)'
sc_lm<-lm(LeagueIndex~.,sc)
sc_lm_1<-update(sc_lm,.~.-UniqueUnitsMade ,sc)
sc_lm_2<-update(sc_lm,.~.-Age-UniqueUnitsMade)
sc_lm_3<-update(sc_lm,.~.-Age-UniqueUnitsMade-ComplexUnitsMade)
sc_lm_4<-update(sc_lm,.~.-Age-UniqueUnitsMade-ComplexUnitsMade-MinimapRightClicks)
sc_lm_final<-update(sc_lm,.~.-Age-TotalMapExplored-UniqueUnitsMade-MinimapRightClicks-ComplexUnitsMade)
sc_lm<-lm(LeagueIndex~.,sc)
sc_lm_1<-update(sc_lm,.~.-UniqueUnitsMade ,sc)
sc_lm_2<-update(sc_lm,.~.-Age-UniqueUnitsMade)
sc_lm_3<-update(sc_lm,.~.-Age-UniqueUnitsMade-ComplexUnitsMade)
sc_lm_4<-update(sc_lm,.~.-Age-UniqueUnitsMade-ComplexUnitsMade-MinimapRightClicks)
sc_lm_final<-update(sc_lm,.~.-Age-TotalMapExplored-UniqueUnitsMade-MinimapRightClicks-ComplexUnitsMade)
kable(tidy(sc_lm,conf.level = .05),digits = c(3,4,4,1),caption = "Summary of Starting Manual Stepwise Backward Model Selection $lm_\\Omega$")
kable(tidy(sc_lm_final,conf.level = .05),digits = c(3,4,4,1),caption = "Summary of Final Manual Stepwise Backward Model Selection$lm_\\omega$")
kable(tidy(sc_lm_final,conf.level = .05),digits = c(4,4,4,1),caption = "Summary of Final Manual Stepwise Backward Model Selection$lm_\\omega$")
kable(tidy(sc_lm,conf.level = .05),digits = c(4,4,4,1),caption = "Summary of Starting Manual Stepwise Backward Model Selection $lm_\\Omega$")
kable(tidy(sc_lm_final,conf.level = .05),digits = c(4,4,4,1),caption = "Summary of Final Manual Stepwise Backward Model Selection$lm_\\omega$")
kable(tidy(sc_lm,conf.level = .05),digits = c(4,4,4,1),caption = "Summary of Starting Manual Stepwise Backward Model Selection $lm_\\Omega$")
kable(tidy(sc_lm_final,conf.level = .05),digits = c(4,4,4,1),caption = "Summary of Final Manual Stepwise Backward Model Selection$lm_\\omega$")
sc%>%select(HoursPerWeek,TotalHours,HoursPerWeek,APM,AssignToHotkeys,UniqueHotkeys,UniqueHotkeys,MinimapAttacks,WorkersMade,ComplexUnitsMade)
sc_omega<-sc%>%select(HoursPerWeek,TotalHours,HoursPerWeek,APM,AssignToHotkeys,UniqueHotkeys,UniqueHotkeys,MinimapAttacks,WorkersMade,ComplexUnitsMade)
```{r echo=FALSE}
sc_cor<-cor(select_if(sc_omega,is.numeric),use = "complete.obs")
sc_cor_plot<-corrplot(sc_cor,
tl.cex=.75,
tl.col='black')
?corrplot
sc_cor<-cor(select_if(sc_omega,is.numeric),use = "complete.obs")
sc_cor_plot<-corrplot(sc_cor,
tl.cex=.75,
tl.col='black',p.mat = res1$p, insig = "p-value")
sc_omega_cor<-cor(select_if(sc_omega,is.numeric),use = "complete.obs")
sc_omega_cor_plot<-corrplot(sc_omega_cor,
tl.cex=.75,
tl.col='black',p.mat = res1$p, insig = "p-value")
sc_omega_cor<-cor(select_if(sc_omega,is.numeric),use = "complete.obs")
sc_omega_cor_plot<-corrplot(sc_omega_cor,
tl.cex=.75,
tl.col='black', insig = "p-value")
library(tidyverse)
library(dbplyr) #piping
library(ggplot2) #plotting
library(gridExtra)# easy plot grids
library(Hmisc) # for correlation matrix
library(corrplot) # For correlation matrix graphic
#library(SC2API) #starcraft 2 API
library(broom) #tidy lm summaries
library(knitr) #pretty tables
library(GGally) # ggpairs
#library(knitr)#Side by side table
#library(kableExtra)#Side by side table
sc_omega_cor<-cor(select_if(sc_omega,is.numeric),use = "complete.obs")
sc_omega_cor_plot<-corrplot(sc_omega_cor,
tl.cex=.75,
tl.col='black',p.mat = sc_o, insig = "p-value")
ggpair(sc_omega_cor)
sc_omega_cor<-cor(select_if(sc_omega,is.numeric),use = "complete.obs")
sc_omega_cor_plot<-corrplot(sc_omega_cor,
tl.cex=.75,
tl.col='black',p.mat = sc_o, insig = "p-value")
ggpairs(sc_omega_cor)
sc_omega_cor<-cor(select_if(sc_omega,is.numeric),use = "complete.obs")
sc_omega_cor_plot<-corrplot(sc_omega_cor,
tl.cex=.75,
tl.col='black',p.mat = sc_o, insig = "p-value")
#ggpairs(sc_omega_cor)
sc_omega_cor<-cor(select_if(sc_omega,is.numeric),use = "complete.obs")
sc_omega_cor_plot<-corrplot(sc_omega_cor,
tl.cex=.75,
tl.col='black',p.mat = sc_o, insig = "p-value")
#ggpairs(sc_omega_cor)
sc_omega_cor<-cor(select_if(sc_omega,is.numeric),use = "complete.obs")
sc_omega_cor_plot<-corrplot(sc_omega_cor,
tl.cex=.75,
tl.col='black', insig = "p-value")
#ggpairs(sc_omega_cor)
sc_omega<-sc%>%select(HoursPerWeek,TotalHours,HoursPerWeek,AssignToHotkeys,UniqueHotkeys,UniqueHotkeys,MinimapAttacks,WorkersMade,ComplexUnitsMade)
sc_omega_cor<-cor(select_if(sc_omega,is.numeric),use = "complete.obs")
sc_omega_cor_plot<-corrplot(sc_omega_cor,
tl.cex=.75,
tl.col='black', insig = "p-value")
#ggpairs(sc_omega_cor)
sc_omega<-sc%>%select(HoursPerWeek,TotalHours,HoursPerWeek,APM,AssignToHotkeys,UniqueHotkeys,UniqueHotkeys,MinimapAttacks,WorkersMade,ComplexUnitsMade)
sc_omega_cor<-cor(select_if(sc_omega,is.numeric),use = "complete.obs")
sc_omega_cor_plot<-corrplot(sc_omega_cor,
tl.cex=.75,
tl.col='black', insig = "p-value")
#ggpairs(sc_omega_cor)
sc_omega_cor<-cor(select_if(sc_omega,is.numeric),use = "complete.obs")
sc_omega_cor_plot<-corrplot(sc_omega_cor,
tl.cex=.75,
tl.col='black',
method="number")
#ggpairs(sc_omega_cor)
